/** 
 * Nombre del Archivo: PanelCoordinador.java
 * Autores: JULIAN GARCIA RICO (1225435) 
 *          DIEGO FERNANDO BEDOYA (1327749) 
 *          CRISTIAN ALEXANDER VALENCIA TORRES (1329454) 
 *          OSCAR STEVEN ROMERO BERON (1326750) 
 */
package View;

import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JPanel;

/**
 * Esta se usa para el implementar el patron FABRICA
 * Representa un Producto Concreto
 */
public class PanelMT extends javax.swing.JPanel {

    /**
     * Creates new form PanelPrincipal
     */
    public PanelMT() {
        initComponents();       
        addMenu();
        // Componentes

        // Eventos
        EventosPanelAdministrador events = new EventosPanelAdministrador();
        asignarEventos(events);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelIzq = new javax.swing.JPanel();
        panelDer = new javax.swing.JPanel();

        panelIzq.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        panelDer.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelIzq, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelDer, javax.swing.GroupLayout.DEFAULT_SIZE, 764, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelIzq, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelDer, javax.swing.GroupLayout.DEFAULT_SIZE, 515, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel panelDer;
    private javax.swing.JPanel panelIzq;
    // End of variables declaration//GEN-END:variables
    // PANELES 
    

    // MENU
    private JMenuBar barraLateral;  
    private JMenu menuCalificaciones;// Calificaciones
    private JMenuItem itemCrearCalif; // Calificaciones
    private JMenuItem itemModificarCalif; // Calificaciones
    private JMenuItem itemBuscarCalif; // Calificaciones
    private JMenuItem itemEliminarCalif; // Calificaciones  
    
     
    /**|
     * Nombre: actualizarPaneDer
     * Proposito: Metodo que actualiza el contenido del panelDer
     * @param panelNuevo 
     */    
    private void actualizarPaneDer(JPanel panelNuevo){
        panelDer.removeAll();
        panelDer.add(panelNuevo);
        panelDer.repaint();
        panelDer.updateUI();
    } // Fin del metodo actualizarPaneDer
    
    private void addImage(){
        JLabel labelImagne = new JLabel();
        ImageIcon img = new ImageIcon(getClass().getResource("/View/Image/Logounivalle.png"));
        labelImagne.setIcon(img);
        panelIzq.add(labelImagne);
    } // Fin del metodo addImage
    
    private void addMenu() {
        addImage();
        JPanel panelTemporal = new JPanel();
        panelTemporal.setBorder(BorderFactory.createEmptyBorder(20, 0, 50, 0));
        barraLateral = new JMenuBar();
        barraLateral.setLayout(new GridLayout(1, 1));

        // Menu Calificaciones
        menuCalificaciones = new JMenu("Calificaciones");
        menuCalificaciones.setPreferredSize(new Dimension(180, 50));
        menuCalificaciones.setMenuLocation(180, 0);
        // Components
        itemCrearCalif = new JMenuItem("Ingresar"); // Calificaciones
        itemModificarCalif = new JMenuItem("Modificar"); // Calificaciones
        itemBuscarCalif = new JMenuItem("Buscar"); // Calificaciones
        itemEliminarCalif = new JMenuItem("Eliminar"); // Calificaciones     
        // Add Components
        menuCalificaciones.add(itemCrearCalif);
        menuCalificaciones.add(itemModificarCalif);
        menuCalificaciones.add(itemBuscarCalif);
        menuCalificaciones.add(itemEliminarCalif);
               
        // Add elements to JMenu
        barraLateral.add(menuCalificaciones);
        
        // Add to JPanel
        panelTemporal.add(barraLateral);
        panelIzq.add(panelTemporal);
        
    } // Fin del metodo addMenu
    
    private void asignarEventos(EventosPanelAdministrador events) {  
        // Menu Calificaciones
        itemCrearCalif.addActionListener(events); 
        itemModificarCalif.addActionListener(events);
        itemBuscarCalif.addActionListener(events);
        itemEliminarCalif.addActionListener(events);              
    } // Fin del metodo asignarEventos
    
    private class EventosPanelAdministrador implements ActionListener{
        @Override
        public void actionPerformed(ActionEvent e) {
            // Menu Calificaciones
            if (e.getSource() == itemCrearCalif) {
            }
            if (e.getSource() == itemModificarCalif) {            
            }
            if (e.getSource() == itemBuscarCalif) {            
            }
            if (e.getSource() == itemEliminarCalif) {            
            }              
        }
    } // Fin de la clase EventosPanelPrincipal

} // Fin de la clase PanelPrincipal
